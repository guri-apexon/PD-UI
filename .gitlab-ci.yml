image: node:12.20

cache:
  paths:
    - node_modules/

stages:
  - test
  - sonar-scan
  - build_and_deploy

test:
  stage: test

  tags: 
    - pd-ui-dev
  script:
    - echo "Testing App"
    - sh CI-scripts/unit-test.sh
    - echo "Test successfully!"
  allow_failure: true
  only:
    refs:
      - Sonar-CICD
    variables: 
      - $ENVIRONMENT== "dev"

Perform Sonarqube Analysis and quality gate:
  image: sonarsource/sonar-scanner-cli
  stage: sonar-scan
  before_script:
    - echo "Setting up for Sonarqube Analysis on PD $CI_COMMIT_REF_NAME branch"
    - apk upgrade --update-cache --available && apk add openssl
    - openssl s_client -connect   usadc-vspsq01.quintiles.net:443 | keytool -import -noprompt -alias sonarqbue_test -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit

  script:
    - echo "Running Sonarqube Analysis on $CI_COMMIT_REF_NAME branch"
    - apk upgrade --update-cache --available && apk add openssl
    - npm install --force -s
    - npm run test -s -- --coverage --watchAll=false
    - sh CI-Scripts/sonarqube.sh branch > /tmp/sonar.log
    - echo "Running Sonarqube quality gate on $CI_COMMIT_REF_NAME branch"
    - sh CI-Scripts/qualitygate.sh
  allow_failure: true
  tags:
    - ca2ugitla006p-D4
  only:
    refs:
      - Sonar-CICD
    variables:
      - $ENVIRONMENT== "dev"

build:
  stage: build_and_deploy

  tags: 
    - pd-ui-dev

  script: 
    - echo "Start building App"
    - sh CI-scripts/deploy.sh
    - echo "Build and Deployed Successfully!"

  artifacts:
    paths:
      - build
      
  only:
    refs:
      - Sonar-CICD
    variables: 
      - $ENVIRONMENT== "dev"
